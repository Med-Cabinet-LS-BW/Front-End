{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Tim\\\\Desktop\\\\Lambda\\\\Build-Week-2\\\\Front-End\\\\medizen\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tim\\\\Desktop\\\\Lambda\\\\Build-Week-2\\\\Front-End\\\\medizen\\\\src\\\\src\\\\components\\\\Auth\\\\NewLogin.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst NewLogin = ({\n  values,\n  errors,\n  touched,\n  status\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  useEffect(() => {\n    status && setUser(user => [...user, status]);\n  }, [status]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, user ? \"Logged In\" : React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Login Below\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, errors.email), React.createElement(Field, {\n    type: \"password\",\n    placeholder: \"password\",\n    name: \"password\",\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, errors.password), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nconst FormikNewLogin = withFormik({\n  mapPropsToValues({\n    email,\n    password\n  }) {\n    return {\n      email: email || '',\n      password: password || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required().email(),\n    password: Yup.string().required('No Password Provided.').min(8, 'Password too short. 8 characters minimum.')\n  }),\n\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    axios.post(\"https://medizen-api.herokuapp.com/api/auth/login\", values).then(response => {\n      localStorage.setItem(\"token\", response.data.token);\n      setStatus(response.data); //console.log(response.data.token);\n    }).catch(err => console.log(err.response));\n    resetForm();\n  }\n\n})(NewLogin);\nexport default FormikNewLogin;","map":{"version":3,"sources":["C:/Users/Tim/Desktop/Lambda/Build-Week-2/Front-End/medizen/src/src/components/Auth/NewLogin.js"],"names":["React","useState","useEffect","axios","withFormik","Form","Field","Yup","NewLogin","values","errors","touched","status","user","setUser","email","password","FormikNewLogin","mapPropsToValues","validationSchema","object","shape","string","required","min","handleSubmit","setStatus","resetForm","post","then","response","localStorage","setItem","data","token","catch","err","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport { withFormik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst NewLogin = ({values, errors, touched, status}) => {\r\n    const [user, setUser] = useState([]);\r\n\r\n    useEffect(() => {\r\n        status && setUser(user => [...user, status]);\r\n    }, [status])\r\n\r\n    return (\r\n        <div>\r\n         {user ? \"Logged In\" : \r\n         <> \r\n          <h2>Login Below</h2>  \r\n      <Form>\r\n        <Field type=\"email\" name=\"email\" placeholder=\"email\" />\r\n        {touched.email && errors.email && <p>{errors.email}</p>}\r\n        <Field type=\"password\" placeholder=\"password\" name=\"password\" autoComplete=\"off\"/>\r\n        {touched.password && errors.password && <p>{errors.password}</p>}\r\n        <button type=\"submit\">Submit</button>\r\n      </Form>\r\n      </>}\r\n    </div>\r\n    )\r\n}\r\n\r\nconst FormikNewLogin = withFormik({\r\n  mapPropsToValues({email, password}) {\r\n    return {\r\n      email: email || '',\r\n      password: password || '',\r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    email: Yup.string().required().email(),\r\n    password: Yup.string().required('No Password Provided.').min(8, 'Password too short. 8 characters minimum.'),\r\n  }),\r\n  handleSubmit(values, {setStatus, resetForm}) {\r\n    axios.post(\"https://medizen-api.herokuapp.com/api/auth/login\", values)\r\n    .then(response => {\r\n      localStorage.setItem(\"token\", response.data.token);\r\n      setStatus(response.data);\r\n      //console.log(response.data.token);\r\n    })\r\n    .catch(err => console.log(err.response));\r\n    resetForm();\r\n  }\r\n})(NewLogin);\r\n\r\nexport default FormikNewLogin;"]},"metadata":{},"sourceType":"module"}